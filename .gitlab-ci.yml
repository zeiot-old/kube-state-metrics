
variables:
  DOCKER_DRIVER: overlay
  VERSION: 1.0.1

image: docker:git

services:
  - docker:dind

stages:
  - build
  - deploy

build:app:
  stage: build
  image: golang:1.9
  script:
    - git clone https://github.com/kubernetes/kube-state-metrics $GOPATH/src/k8s.io/kube-state-metrics
    - cd $GOPATH/src/k8s.io/kube-state-metrics
    - git checkout v${VERSION}
    - ARM=arch make build
    - ls
    - mkdir binaries/ && cp kube-state-metrics binaries
    - ls binaries
  artifacts:
    paths:
      - binaries

development:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - ls binaries
    - cp binaries/kube-state-metrics 1.0/kube-state-metrics
    - docker build -t "$CI_REGISTRY_IMAGE:latest" 1.0
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

testing:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - cp binaries/kube-state-metrics 1.0/kube-state-metrics
    - docker build -t "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}" 1.0
    - docker push "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}"
  only:
    - branches
  except:
    - master

stable:
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' 1.0/Dockerfile|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - cp binaries/kube-state-metrics 1.0/kube-state-metrics
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}" 1.0
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}"
  only:
    - tags
